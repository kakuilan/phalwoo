<?php
/**
 * Copyright (c) 2017 LKK/lianq.net All rights reserved
 * User: kakuilan@163.com
 * Date: 2017/9/3
 * Time: 16:40
 * Desc: -swoole服务端异步日志类
 */


namespace Lkk\Phalwoo\Server\Component\Log;

use Monolog\Handler\HandlerInterface;
use Monolog\Logger as Monologger;
use Lkk\Phalwoo\Server\Component\Log\Handler\AsyncStreamHandler;
use Phalcon\Events\Manager as PhEventManager;

class SwooleLogger extends Monologger {

    public static $maxFileSize   = 20971520; //日志文件大小限制20M
    public static $maxRecords    = 256; //最多N条日志记录

    protected $logFile;
    protected $defaultHandler;


    /**
     * SwooleLogger constructor.
     *
     * @param string                   $name 日志名
     * @param array                    $handlers 日志处理类
     * @param array                    $processors 额外处理类
     */
    public function __construct($name, $handlers, $processors = []) {
        parent::__construct($name, $handlers, $processors);

    }



    public function setDefaultHandler($file) {
        $this->logFile = trim($file);
        if (!$this->logFile) {
            throw new \LogicException('You tried to log a empty logfile.');
        }

        $this->defaultHandler = new AsyncStreamHandler($this->logFile, Monologger::INFO);
        parent::pushHandler($this->defaultHandler);
    }



    public function pushHandler(HandlerInterface $handler) {
        $handlers = $this->getHandlers();
        if($handler instanceof AsyncStreamHandler && $handlers && current($handlers)===$handler) {
            return true;
        }

        return parent::pushHandler($handler); // TODO: Change the autogenerated stub
    }



    public function getCurrentHandler() {
        $handlers = $this->getHandlers();
        return $handlers ? current($handlers) : null;
    }



}